{"version":3,"sources":["app.service.js","app.http.service.js","app.notification.js","app.fancytree.service.js","app.pagination.service.js","app.directives.js","app-globals.js","app.form.js"],"names":[],"mappingsahxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACprlczwfile":"../support/app-support-app.src.js","sourcesContent":["(function() {\n'use strict';\n\n  angular.module('app.service', []).\n    service(\"appServices\", [\n        '$rootScope', '$state', 'appNotify', 'ngDialog','__DataStore', appServices ]);\n\n  \n    /**\n      * Various App services.\n      * \n      *\n      * @inject $rootScope\n      *\n      * @return void\n      *-------------------------------------------------------- */\n   \n    function appServices( $rootScope, $state, appNotify, ngDialog, __DataStore ) {\n\n\n    \t/**\n\t      * Delay action for particuler time\n\t      *\n\t      * @return object\n\t      *---------------------------------------------------------------- */\n\n\t    this.delayAction = function( callbackFunction, delayInitialLoading) {\n\n\t      var delayInitialLoading = (delayInitialLoading \n\t                                  && _.isNumber(delayInitialLoading) ) \n\t                                  ? delayInitialLoading\n\t                                  : __globals.delayInitialLoading;\n\n\n\t        setTimeout(function(){\n\t            \n\t            callbackFunction.call( this );\n\n\t      }, delayInitialLoading);\n\t    };\n\n    \n        /**\n          * Actions on Response (improved version of doReact) - 03 Sep 2015\n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        this.processResponse = function( responseData, callback, successCallback ) {\n\n            var message,\n              preventRedirect,\n              preventRedirectOn,\n              options      = responseData.options,\n              reactionCode = responseData.reaction;\n\n            if (responseData.data && responseData.data.message) {\n                message = responseData.data.message;\n            }\n\n            if ( _.isString(options) ) {\n                message = options;\n            }\n\n            if ( _.isObject(options) && _.has(options, 'message')) {\n\n                message = options.message;\n\n                preventRedirect   =  options.preventRedirect ? options.preventRedirect : null;\n                preventRedirectOn =  options.preventRedirectOn ? options.preventRedirectOn : null;\n\n            }\n\n            if ( !options || !options.preventRedirect ) {\n\n                switch ( reactionCode ) {\n\n                    case 8:\n                        if( preventRedirectOn !== 8  ) {\n                          $state.go('not_found');\n                        }            \n                        break;\n\n                    case 7:\n                        if( preventRedirectOn !== 7  ) {\n                          $state.go('invalid_request');\n                        }\n                        break;\n\n                    case 5:\n                    if( preventRedirectOn !== 5  ) {\n                          $state.go('unauthorized');\n                        }\n                        break;\n\n                    case 18:\n                        if( preventRedirectOn !== 18  ) {\n                          $state.go('not_exist');\n                        }\n                        break;\n\n                }\n            }\n\n\n            if ( message &&  ( reactionCode === 1 ) ) {\n\n              appNotify.success( message );\n\n            } else if( message &&  ( reactionCode === 14 ) ) {\n\n              appNotify.warn( message );\n\n            } else if( message &&  ( reactionCode != 1 ) ) {\n              \n              appNotify.error( message );\n\n            }\n\n            var callBackReturn = {};\n\n            if (callback) {\n\n                if (_.isFunction(callback)) {\n\n                    callBackReturn.then = \n                            callback.call( this, reactionCode );\n\n                } else if(_.isObject(callback)) {\n\n                    if (_.has(callback, 'then') && _.isFunction(callback.then)) {\n                        callBackReturn.then = \n                            callback.then.call( this, reactionCode );\n                    }\n\n                    if (_.has(callback, 'error') && _.isFunction(callback.error)) {\n                        \n                        if (reactionCode === 2) {\n                            callBackReturn.error = \n                                callback.error.call(this, reactionCode);\n                        }\n                    }\n\n                    if (_.has(callback, 'success') && _.isFunction(callback.success)) {\n                        \n                        if (reactionCode === 1) {\n                            callBackReturn.success = \n                                callback.success.call(this, reactionCode);\n                        }\n                    }\n\n                    if (_.has(callback, 'otherError') && _.isFunction(callback.otherError)) {\n                        \n                        if (reactionCode !== 1) {\n                            callBackReturn.otherError = \n                                callback.otherError.call(this, reactionCode);\n                        }\n                    }\n\n                }\n\n            }\n\n            if (successCallback && _.isFunction(successCallback)) {\n\n                if (reactionCode === 1) {\n                    callBackReturn.success = successCallback.call(this, reactionCode);\n                }\n            }\n            \n            return callBackReturn;\n\n        };\n\n\n        /**\n      \t  * Close all dialog\n      \t  *\n      \t  * @return void\n      \t  *---------------------------------------------------------------- */\n    \n\t    this.closeAllDialog = function() {\n\t        ngDialog.closeAll();\n\t    };\n\n\t    /**\n\t      * Handle dialog show & close methods\n\t      *\n\t      * @param object transmitedData\n\t      * @param object options\n\t      * @param object closeCallback\n\t      *\n\t      * @return object\n\t      *---------------------------------------------------------------- */\n\t    \n\t    this.showDialog = function( transmitedData, options , closeCallback ) {\n\n\t        return ngDialog.open({\n\n\t          template        : options.templateUrl,\n\t          controller      : options.controller,\n\t          controllerAs    : options.controllerAs,\n\t          closeByEscape   : true,\n\t          closeByDocument : false,\n               overlay        : true,\n\t          data            : transmitedData,\n\t\t\t  resolve         : options.resolve,\n\t        }).closePromise.then(function ( data ) {\n\n\t            return closeCallback.call( this, data );\n\n\t        });\n\n\t    };\n\n        /**\n          * Handle dialog show & close methods\n          *\n          * @param object transmitedData\n          * @param object options\n          * @param object closeCallback\n          *\n          * @return object\n          *---------------------------------------------------------------- */\n        \n        this.createBarChart = function(element, chartData, options ) {\n           \n            var myPieChart = new Chart(element.elementId,{\n                type: element.type,\n                data: {\n                    datasets: chartData.data,\n                    labels: chartData.labels\n                },\n                options: options.options\n            });\n               \n            return myPieChart;\n        };\n\n\t    /**\n\t      * Handle dialog show & close methods\n\t      *\n\t      * @param object options\n\t      * @param object closeCallback\n\t      *\n\t      * @return object\n\t      *---------------------------------------------------------------- */\n\t    \n\t    this.confirmDialog = function( options , closeCallback ) {\n\n\t        return ngDialog.openConfirm({\n\n\t            template  : options.templateUrl,\n\t            className : 'ngdialog-theme-default',\n\t            showClose : true\n\n\t        }, function( value ) {\n\n\t            return closeCallback.call( this, value );\n\n\t        });\n\n\t    };\n\n\t    /**\n          * Check if user allowed given authority ID permission of not\n          *\n          * @param string authorityId\n          *\n          * @return boolean\n          *---------------------------------------------------------------- */\n\n        $rootScope.canAccess = function(str) {\n\n\t\t\tvar arr = __globals.appImmutable('availableRoutes');\n \n\t        // If there are no items in the array, return an empty array\n\t        if(typeof arr === 'undefined' || arr.length === 0) return false;\n\t        // If the string is empty return all items in the array\n\t        if(typeof arr === 'str' || str.length === 0) return false;\n\n\t        // Create a new array to hold the results.\n\t        var res = [];\n\t     \n\t        // Check where the start (*) is in the string\n\t        var starIndex = str.indexOf('*');\n\t    \t\t\n\t        // If the star is the first character...\n\t        if(starIndex === 0) {\n\t            \n\t            // Get the string without the star.\n\t            str = str.substr(1);\n\t            for(var i = 0; i < arr.length; i++) {\n\t                \n\t                // Check if each item contains an indexOf function, if it doesn't it's not a (standard) string.\n\t                // It doesn't necessarily mean it IS a string either.\n\t                if(!arr[i].indexOf) continue;\n\t                \n\t                // Check if the string is at the end of each item.\n\t                if(arr[i].indexOf(str) === arr[i].length - str.length) {                    \n\t                    // If it is, add the item to the results.\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        // Otherwise, if the star is the last character\n\t        else if(starIndex === str.length - 1) {\n\t            // Get the string without the star.\n\t            str = str.substr(0, str.length - 1);\n\t            for(var i = 0; i < arr.length; i++){\n\t                // Check indexOf function                \n\t                if(!arr[i].indexOf) continue;\n\t                // Check if the string is at the beginning of each item\n\t                if(arr[i].indexOf(str) === 0) {\n\t                    // If it is, add the item to the results.\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        // In any other case...\n\t        else {            \n\t            for(var i = 0; i < arr.length; i++){\n\t                // Check indexOf function\n\t                if(!arr[i].indexOf) continue;\n\t                // Check if the string is anywhere in each item\n\t                if(arr[i].indexOf(str) !== -1) {\n\t                    // If it is, add the item to the results\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        \n\t        // Return the results as a new array.\n\t        return false;\n\n\t    /*var birds = ['bird1','somebird','bird5','bird-big','abird-song'];\n\n\t    var res = searchArray(birds, 'bird.*');\n\t    alert(res.join('\\n'));\n\t    // Results: bird1, bird5, bird-big\n\t    var res = searchArray(birds, '*bird');\n\t    alert(res.join('\\n'));\n\t    // Results: somebird\n\t    var res = searchArray(birds, 'bird');\n\t    alert(res.join('\\n'));*/\n\t    // Results: bird1, somebird, bird5, bird-big, abird-song\n\n\t            /*if (_.includes(authorityId, '*')) {\n\n\t                var prevIndex = -1,\n\t                    array = authorityId.split('*'), // Split the search string up in sections.\n\t                    result = true,\n\t                    availableRoutes = __globals.appImmutable('availableRoutes');\n\n                // For each search section\n                for(var i = 0; i < array.length && result; i++){\n\n                    _.forEach(availableRoutes, function(value, key) {\n\n                        // Find the location of the current search section\n                        var index = value.indexOf(array[i]);\n\n                        // If the section isn't found, or it's placed before the previous section...\n                        if (index == -1 || index < prevIndex){\n                            return false;\n                        }\n\n                    });\n                }\n                return result;\n\n            } else {\n\n                // check if routes available for access\n                if (_.includes(__globals.appImmutable('availableRoutes'), authorityId) === false) {\n\n                    return false;\n\n                }\n                return true;\n            }*/\n\n        };\n\n\t    /**\n\t    * Fire update breadcrumbs event\n\t    *\n\t    * @param mixed breadcrumbCollection\n\t    *\n\t    * @return void\n\t    *---------------------------------------------------------------- */\n\n\t    this.updateBreadcrumbs = function(breadcrumbCollection, $currentScope) {\n\n\t        $currentScope.$emit('lw.breadcrumb.update.event', breadcrumbCollection);\n\t    };\n\n\t\t/**\n          * Handle Login required dialog show & close methods\n          *\n          * @param object string\n          * @param object callback\n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.loginRequiredDialog = function(from, options, callback) {\n\n            this.showDialog(options,\n            {\n                templateUrl : __globals.getTemplateURL('user.login-dialog')\n            },\n            function(promiseObj) {\n\t\t\t\t\n                if (_.has(promiseObj.value, 'login_success')\n                    && promiseObj.value.login_success === true) {\n\t\t\t\t\t\n                    callback.call(this, true);\n\n                }\n\n\t\t\t\tcallback.call(this, false);\n\n            });\n\n        };\n\n\t \t\n\n    }\n\n})();","(function() {\n'use strict';\n\n  angular.module('app.http', []).\n\n    // register the interceptor as a service, intercepts -\n    // all angular ajax http reuest called\n    config([ \n      '$httpProvider', \n      function ($httpProvider) {\n\n        $httpProvider.interceptors.push('errorInterceptor');\n        var proccessSubmit = function (data, headersGetter) {\n\n           return data;\n\n        };\n\n        $httpProvider.defaults.transformRequest.push( proccessSubmit );\n        $httpProvider.interceptors.push('loadingHttpInterceptor');\n\n    }]).\n    factory('errorInterceptor', [ \n      '$q',\n      '__Auth',\n      '__Utils',\n      '$rootScope',\n      errorInterceptor\n    ]). \n    factory('loadingHttpInterceptor', [\n        '$q',\n        '$rootScope',function($q, $rootScope) {\n      return {\n        request: function(config) {\n          $('.lw-disabling-block').addClass('lw-disabled-block');\n          $('html').addClass('lw-has-disabled-block');\n          return config || $q.when(config);\n        },\n        response: function(response) {\n\n            $('.lw-disabling-block').removeClass('lw-disabled-block lw-has-processing-window');\n            $('html').removeClass('lw-has-disabled-block');\n            return response || $q.when(response);\n\n        },\n        responseError: function(rejection) {\n            $('.lw-disabling-block').removeClass('lw-disabled-block lw-has-processing-window');\n            $('html').removeClass('lw-has-disabled-block');\n\n          return $q.reject(rejection);\n        }\n      };\n}]);\n\n  \n  /**\n   * errorInterceptor factory.\n   * \n   * Make a response for all http request\n   *\n   * @inject $q - for return promise\n   * @inject __Auth - for set authentication object\n   * @inject $location - for redirect on another page\n   *\n   * @return void\n   *-------------------------------------------------------- */\n   \n  function errorInterceptor($q, __Auth, __Utils, $rootScope) {\n\n      return {\n\n          request: function (config) {\n\n            return config || $q.when(config);\n\n          },\n          requestError: function( request ) {\n\n              return $q.reject(request);\n\n          },\n          response: function ( response ) {\n\n            var requestData = response.data,\n                publicApp   = __globals.isPublicApp();\n \n            // If is Public App & Server return Not foun Reaction Then Redirect on Not Found Page\n            if (publicApp == true && requestData.reaction == 18) {\n\n                window.location = __Utils.apiURL('error.not_found');\n                \n            }\n\n            if (requestData.additional && requestData.additional.orderData) {\n\n            \tvar order = requestData.additional.orderData;\n            \t// update the total new order placed count\n            \t$rootScope.$broadcast('update.new.order.placed.count', order);\n            }\n\n             // if auth_info response exist\n            if (requestData.data && _.has(requestData.data, 'auth_info')) {\n                \n                var authObj       = requestData.data.auth_info,\n                    reactionCode  = authObj.reaction_code;\n\n                __Auth.checkIn(authObj, function() {\n\n                    switch (reactionCode) {\n\n\t                    case 11:  // access denied\n\n                            // Check if current app is public the redirect to Home View\n                            if (publicApp == true) {\n\n                                window.location = window.appConfig.appBaseURL;\n\n                            } else {\n\n                                __Auth.state.go(\"unauthorized\");\n\n                            }\n                            // window.location = window.appConfig.appBaseURL;\n\n\t                        break;\n\n\t                    case 9:  // if unauthorized\n\n                            // Check if current app is public the redirect to Login View\n                            // if (publicApp == true) {\n\n                            //     window.location = __Utils.apiURL('user.login');\n\n                            // } else {\n\n                            //     __Auth.registerIntended( {\n                            //         name    : __Auth.state.current.name,\n                            //         params  : __Auth.state.params,\n                            //         except  : [ 'user_login', 'user_logout' ]\n                            //     }, function() {\n\n                            //         $rootScope.$broadcast('lw-open-login-dialog', {'data' : response});\n\n                            //     }); \n\n                            // }\n\n                            __Auth.registerIntended( {\n                                name    : __Auth.state.current.name,\n                                params  : __Auth.state.params,\n                                except  : [ 'user_login', 'user_logout' ]\n                            }, function() {\n\n                                $rootScope.$broadcast('lw-open-login-dialog', {'data' : response});\n\n                            }); \n                            //window.location = __Utils.apiURL('user.login');\n\t\t\t\t\t\t\t// $rootScope.$broadcast('lw-open-login-dialog', {'data' : response});\n\n\t                        break;\n\n\t                    case 6:  // if invalid request                        \n\t                        __Auth.state.go(\"invalid_request\");\n\n\t                        break;\n\n\t                    case 10:  \n\t                        // if already authenticated                        \n\t                       // __Auth.redirectIntended('user_profile_edit');\n\n\t                        break;\n\n                    }\n\n                });\n               \n\n            }\n\n            return response || $q.when( response );\n            \n          },\n          responseError: function ( response ) {\n\n            return $q.reject(response);\n\n          }\n\n      };\n\n  };\n\n})();","(function() {\n'use strict';\n\n  angular.module('app.notification', []).\n    service(\"appNotify\", [\n        'ngNotify', appNotify ]);\n\n  \n  /**\n     * appNotify service.\n     *\n     * Show notification\n     *\n     * @inject ngNotify\n     *\n     * @return object\n     *-------------------------------------------------------- */\n   \n  function appNotify( ngNotify ) {\n\n\n      /*\n       Notification Default Option Object\n      -------------------------------------------------------------------------- */\n      \n      this.optionsObj = {\n        position      : 'top',\n        type          : 'success',\n        theme         : 'pure',\n        dismissQueue  : true,\n        duration      : 3000,\n        sticky        : false\n      };\n\n      /**\n        * Show success notification message\n        *\n        * @param string - message\n        * @param object - options  \n        *\n        * @return object\n        *---------------------------------------------------------------- */\n\n      this.success  =  function( message, options ) {\n\n          if ( _.isEmpty( options ) ) {  // Check for if options empty\n              var options = {};\n          }\n\n          options.type = 'success';\n\n          this.notify( message, options );\n\n      };\n\n        /**\n          * Show error notification message\n          *\n          * @param string - message\n          * @param object - options \n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.error  =  function( message, options ) {\n\n            if ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'error';\n\n            this.notify( message, options );\n\n        };\n\n        /**\n          * Show information notification message\n          *\n          * @param string - message\n          * @param object - options  \n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.info  =  function( message, options ) {\n\n            if ( _.isEmpty( options ) ) {  // Check for if options empty\n                var options = {};\n            }\n\n            options.type = 'info';\n\n            this.notify( message, options );\n\n        };\n\n        /**\n          * Show warning notification message\n          *\n          * @param string - message\n          * @param object - options  \n          *\n          * @return object\n          *---------------------------------------------------------------- */\n\n        this.warn  =  function( message, options ) {\n\n            if ( _.isEmpty( options ) ) {  // Check for if options empty\n                  var options = {};\n            }\n\n            options.type = 'warn';\n\n            this.notify( message, options );\n\n        };\n\n        /**\n          * Show notification\n          *\n          * @param string msg\n          * @param object options\n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        this.notify = function( message, options ) {\n          \n            // show notification\n            ngNotify.set( message, _.assign( this.optionsObj, options ) );\n\n        };\n      \n  };\n\n})();","(function() {\n'use strict';\n\n  angular.module('app.fancytree', []).\n    service(\"appFancytree\", [\n        '$rootScope', 'appServices', '__DataStore', appFancytree ]);\n\n  \n    /**\n      * Tree data service.\n      * \n      *\n      * @inject $rootScope\n      * @inject appServices\n      * @inject __DataStore\n      * \n      * @return void\n      *-------------------------------------------------------- */\n   \n    function appFancytree($rootScope, appServices, __DataStore ) {\n\t \t\n    \tvar scope = this;\n    \t\n\t\t/**\n\t \t* remove item from fancytree\n\t \t*\n\t \t* @param object collectionObject\n\t \t* @param  listingFor\n\t \t* @param number keyID\n\t \t* @param string formType\n\t \t* @param number expandItem\n\t \t*\n\t \t* @return object\n\t \t*---------------------------------------------------------------- */\n\n\t \tscope.removeTreeItem = function(collectionObject, keyID, \n\t \t\tformType, expandItem) {\n\n\t \t\tvar self = this;\n\n\t \t\t\t_.forEach(collectionObject, function(object, key) {\n\n\t\t \t\t\tif( _.has(object, 'key') &&  object.key == keyID) {\n\n\t\t \t\t\t\t// remove current item when category edit\n\t\t \t\t\t\tif (formType == 'catEdit') {\n\t\t \t\t\t\t  \treturn _.remove(collectionObject, function(object) {\n\t\t\t\t\t\t\t\treturn object.key === parseInt(keyID);\n\t\t\t\t\t\t\t});\t\n\n\t\t \t\t\t\t} else if(formType == 'catAdd' && object.key == expandItem) {\n\n\t\t \t\t\t\t\tobject.active   = true;\n\n\t\t \t\t\t\t} else if(formType == 'productAdd' && object.key == keyID) {\n\t\t \t\t\t\t\tobject.selected   = true;\n\t\t \t\t\t\t\t\n\t\t \t\t\t\t}\n\n\t\t \t\t\t} else if( _.has(object, 'children')) {\n\n\t\t \t\t\t\tif (formType == 'catEdit') {\n\t\t \t\t\t\t\t\n\t\t\t \t\t\t\tif (object.key == expandItem) {\n\t\t\t \t\t\t\t\tobject.active   = true;\n\t\t\t \t\t\t\t}\n\n\t\t\t \t\t\t\tif (object.key == expandItem) {\n\t\t\t \t\t\t\t\tobject.expanded = true;\n\t\t\t \t\t\t\t}\t\n\n\t\t \t\t\t\t} else if(formType == 'catAdd') {\n\n\t\t \t\t\t\t\tif (object.key == expandItem) {\n\t\t\t \t\t\t\t\tobject.active   = true;\n\t\t\t \t\t\t\t}\n\t\t\t \t\t\t\t\n\t\t\t \t\t\t\tif (object.key == expandItem) {\n\t\t\t \t\t\t\t\tobject.expanded = true;\n\t\t\t \t\t\t\t}\n\n\t\t \t\t\t\t} else if(formType == 'productAdd') {\n\n\t\t \t\t\t\t\tif (object.key == keyID) {\n\t\t \t\t\t\t\t\tobject.selected   = true;\t\n\t\t \t\t\t\t\t}\n\n\t\t \t\t\t\t\tif (keyID) {\n\t\t \t\t\t\t\t\tobject.expanded  = true;\n\t\t \t\t\t\t\t}\n\n\t\t \t\t\t\t}\n\t\t \t\t\t\tself.removeTreeItem(object.children, keyID, formType, expandItem);\n\t\t \t\t\t}\n\n\t\t\t\t});\n\n\t \t\treturn collectionObject;\n\t \t\t\t\n\t \t};\n\n\t \t/**\n\t \t* update expand & selected true \n\t \t* on match IDs\n\t \t*\n\t \t* @param array hirarchicalObj\n\t \t* @param array nodeIDs\n\t \t* \n\t \t* @return array\n\t \t*---------------------------------------------------------------- */\n\n\t \tvar updateMultSelectedValue = function (hirarchicalObj, nodeIDs) {\n\n\t        if (hirarchicalObj && hirarchicalObj.length > 0) {\n\n\t            for (var i = 0; i < hirarchicalObj.length; i++) {\n\n\t                var item;\n\t               \t\t\n\t               \t_.forEach(nodeIDs, function(ID, key) {\n\t \t\t\t\t\n\t\t                if (ID == hirarchicalObj[i].key) {\n\t\t                    item = hirarchicalObj[i];\n\t\t                    item = hirarchicalObj[i]['selected'] = true;\n\n\t\t                    //item = hirarchicalObj[i]['expanded'] = true;\n\t\t                    if (!_.isEmpty(hirarchicalObj[i].parent_id)) {\n\t\t                \t\titem = hirarchicalObj[i]['expanded'] = true;\n\t\t                \t}\n\n\t\t                } else {\n\t\t                \t\n\t\t                \tif ((ID) && _.isEmpty(hirarchicalObj[i].parent_id)) {\n\t\t                \t\titem = hirarchicalObj[i]['expanded'] = true;\n\t\t                \t}\n\t\t                }\n\t                });\n\n\t                updateMultSelectedValue(hirarchicalObj[i].children, nodeIDs);\n\n\t            };\n\n\t        }\n\n\t        return item = hirarchicalObj;\n\t    };\n\n\t    /**\n\t \t* add expand & selected true \n\t \t* on match ID\n\t \t*\n\t \t* @param array hirarchicalObj\n\t \t* @param array nodeID\n\t \t* \n\t \t* @return array\n\t \t*---------------------------------------------------------------- */\n\n\t \tvar addMultSelectedValue = function (hirarchicalObj, nodeID) {\n\n\t        if (hirarchicalObj && hirarchicalObj.length > 0) {\n\n\t            for (var i = 0; i < hirarchicalObj.length; i++) {\n\n\t                var item, pID;\n\t               \t\t\n\t               \tif (nodeID === hirarchicalObj[i].key) {\n\t                    item = hirarchicalObj[i];\n\t                    item = hirarchicalObj[i]['selected'] = true;\n\n\t                    if (!_.isEmpty(hirarchicalObj[i].parent_id)) {\n\t                \t\titem = hirarchicalObj[i]['expanded'] = true;\n\t                \t}\n\n\t                } else {\n\n\t                \tif ((nodeID) && _.isEmpty(hirarchicalObj[i].parent_id)) {\n\t                \t\titem = hirarchicalObj[i]['expanded'] = true;\n\t                \t}\n\t                }\n\n                 \t\n\n\t                addMultSelectedValue(hirarchicalObj[i].children, nodeID);\n\n\t            };\n\n\t        }\n\n\t        return item = hirarchicalObj;\n\t    };\t\n\n\t \t/**\n\t \t* perform fancytree action\n\t \t*\n\t \t* @param object param1 type \n\t \t*\n\t \t* @return void\n\t \t*---------------------------------------------------------------- */\n\n\t \tscope.getFancytreeTreeFormate = function(treeSource, listingFor, formType, categoryID) \n\t \t{\t\n\t \t\tscope.expandItem = 0;\n\n\t \t\t_.forEach(treeSource, function(object, index) {\n\n \t\t\t\tif (!_.isArray(categoryID) && object.key == categoryID) {\n \t\t\t\t\t\n\t\t\t\t\tif (formType == 'catEdit') {\n\n\t\t\t\t\t\tscope.expandItem = object.parent_id;\n\n\t\t\t\t\t} else if (formType == 'catAdd' && categoryID) {\n\n\t\t\t\t\t\tscope.expandItem = object.key;\n\t\t\t\t\t} \n\t\t\t\t} \n \t\t\t});\n\t \t\t\n \t\t\treturn this.addItems(\n \t\t\t\t\ttreeSource,\n \t\t\t\t \tlistingFor,\n \t\t\t\t  \tformType,\n \t\t\t\t   \tcategoryID,\n \t\t\t\t    scope.expandItem\n \t\t\t\t);\n\t \t\t\n\t\t};\n\n\n\n\t\t/**\n\t \t* making fancytree format on form request \n\t \t*\n\t \t* @param object array\n\t \t* @param string listingFor\n\t \t* @param string formType\n\t \t* @param int categoryID\n\t \t* @param int expandItem\n\t \t*\n\t \t* @return object\n\t \t*---------------------------------------------------------------- */\n\n\t\tthis.addItems =  function (array, listingFor, formType, categoryID, expandItem) {\n\t\t\t\n\t\t\tscope.treeFormating = __globals.buildTree(array);\n \t\t\t\n \t\t\t// this portion belogs to categories fancytree\n \t\t\tif (_.isString(listingFor) &&  \n \t\t\t\tlistingFor == 'categories' || listingFor == 'pages') {\n\n \t\t\t\t// murge object in dyanmic object of fancytree soruce \n \t\t\t\t// for make category direct parent\n \t\t\t\tscope.treeFormating.splice(0, 0, {\n\t\t\t\t\t'title'     : 'Make a Parent',\n\t\t            'key'       : 0,\n\t\t            'parent_id' : null\n\t\t\t\t});\n\n\t\t\t\tif (formType == 'catAdd') {\n\n\t\t\t\t\tif (!categoryID) {\n\n\t\t\t\t\t\tscope.fancytreeSource = scope.treeFormating;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tscope.fancytreeSource = scope.removeTreeItem(scope.treeFormating, categoryID, formType, expandItem);\n\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t} else if (_.isString(formType) &&  formType == 'catEdit') {\n\n\t\t\t\t\t// call function for remove current category fancytree item\n\t \t\t\t\tscope.fancytreeSource = scope.removeTreeItem(scope.treeFormating, categoryID, formType, expandItem);\t\n\t\t\t\t}\n\n \t\t\t\t\n \t\t\t} else if (_.isString(listingFor) &&  listingFor == 'products') {\n \t\t\t\t\n \t\t\t\tif (_.isString(formType) &&  formType == 'productEdit') {\n \t\t\t\t\tscope.fancytreeSource = updateMultSelectedValue(scope.treeFormating, categoryID);\n \t\t\t\t} else {\n \t\t\t\t\tscope.fancytreeSource = addMultSelectedValue(scope.treeFormating, categoryID);\n \t\t\t\t\t//scope.fancytreeSource = scope.removeTreeItem(scope.treeFormating, categoryID, formType, expandItem);\n \t\t\t\t}\n \t\t\t} \n\n \t\t\treturn scope.fancytreeSource;\n\t\t};\n\n    }\n\n})();","(function() {\n'use strict';\n\n\tangular.module('app.pagination', [])\n    \t\t.filter(\"forLoop\", forLoop)\n    \t\t.filter(\"paginate\", ['Paginator', paginate ])\n    \t\t.service(\"Paginator\", ['$rootScope', Paginator ]);\n\n  \t\n  \t/**\n      * paginate filter \n      * \n      * @inject Paginator service\n      * \n      * @return void\n      *-------------------------------------------------------- */\n   \n    function paginate(Paginator) {\n\t \t\n    \treturn function(input, rowsPerPage) {\n\n            if (!input) {\n                return input;\n            }\n\n            if (rowsPerPage) {\n                Paginator.rowsPerPage = rowsPerPage;\n            }\n            \n            Paginator.itemCount = input.length;\n\n            return input.slice(parseInt(Paginator.page * Paginator.rowsPerPage), parseInt((Paginator.page + 1) * Paginator.rowsPerPage + 1) - 1);\n        }\n\n    };\n\n\n    /**\n      * forLoop filter \n      * \n      * @return void\n      *-------------------------------------------------------- */\n   \n    function forLoop() {\n    \treturn function(input, start, end) {\n\n            input = new Array(end - start);\n            \n            for (var i = 0; start < end; start++, i++) {\n                input[i] = start;\n            }\n\n            return input;\n        }\n    };\n\n    /**\n      * pagination  service \n      * \n      * @inject $rootScope\n      * \n      * @return void\n      *-------------------------------------------------------- */\n   \n    function Paginator($rootScope) {\n\t \t\n    \tvar scope \t\t\t= this;\n    \tscope.page \t\t\t= 0;\n        scope.rowsPerPage \t= 50;\n        scope.itemCount \t= 0;\n        scope.limitPerPage  = 5;\n\n        this.setPage = function (page) {\n            if (page > scope.pageCount()) {\n                return;\n            }\n\t\t\tscope.page = page;\n        };\n\n        this.nextPage = function () {\n            if (scope.isLastPage()) {\n                return;\n            }\n\n            scope.page++;\n        };\n\n        this.perviousPage = function () {\n            if (scope.isFirstPage()) {\n                return;\n            }\n\n            scope.page--;\n        };\n\n        this.firstPage = function () {\n            scope.page = 0;\n        };\n\n        this.lastPage = function () {\n            scope.page = scope.pageCount() - 1;\n        };\n\n        this.isFirstPage = function () {\n            return scope.page == 0;\n        };\n\n        this.isLastPage = function () {\n            return scope.page == scope.pageCount() - 1;\n        };\n\n        this.pageCount = function () {\n            return Math.ceil(parseInt(scope.itemCount) / parseInt(scope.rowsPerPage));\n        };\n        \n        this.lowerLimit = function() { \n            var pageCountLimitPerPageDiff = scope.pageCount() - scope.limitPerPage;\n            \n            if (pageCountLimitPerPageDiff < 0) { \n                return 0; \n            }\n            \n            if (scope.page > pageCountLimitPerPageDiff + 1) { \n                return pageCountLimitPerPageDiff; \n            } \n            \n            var low = scope.page - (Math.ceil(scope.limitPerPage/2) - 1); \n            \n            return Math.max(low, 0);\n        };\n\n    }\n\n})();","(function() {\n'use strict';\n\n\tangular.module('app.directives', [])\n\t  \t.directive(\"lwNgColorbox\", lwNgColorbox)\n\t  \t.directive(\"lwColorPicker\", lwColorPicker)\n\t\t.directive(\"lwRateIt\", lwRateIt)\n        .directive(\"lwPopup\", lwPopup)\n        .directive(\"lwTransliterate\", ['appServices', 'TransliterateDataServices', lwTransliterate])\n        .directive(\"lwExpander\", lwExpander)\n\t  \t.directive(\"lwFancytree\",[ 'appFancytree', lwFancytree ])\n        .directive(\"lwChart\", lwChart)\n        .directive('lwFilterList', [ '$timeout', function($timeout) {\n\t\t    return {\n\t\t        link: function(scope, element, attrs) {\n\n\t\t            var li \t\t\t= Array.prototype.slice.call(element[0].children),\n\t\t                searchTerm  = attrs.lwFilterList;\n\n\t\t            function filterBy(value) {\n\n\t\t                li.forEach(function(el) {\n\n\t\t                \tvar $ele       = $(el),\n\t\t                \t    searchTags = $ele.attr('data-tags') ? $ele.attr('data-tags') : '',\n\t\t                \t    existClass = $ele.attr('class');\n\n\t                \t    existClass = existClass.replace('ng-hide', '');\n\n\t\t                    el.className = searchTags.toLowerCase().indexOf(value.toLowerCase()) !== -1 ? existClass : existClass+' ng-hide';\n\n\t\t                });\n\n\t\t            }\n\n\t\t            scope.$watch(attrs.lwFilterList, function(newVal, oldVal) {\n\t\t                if (newVal !== oldVal) {\n\t\t                    filterBy(newVal);\n\t\t                }\n\t\t            });\n\n\t\t        }\n\t\t    };\n\t\t}])\n        .filter('range', function() {\n            return function(input, total) {\n                total = parseInt(total);\n                for (var i=0; i<total; i++)\n                input.push(i);\n                return input;\n            };\n        });\n\n\n\t/**\n      * lwRateIt Directive.\n      * \n      * For apply jquery Rate-It property on attribute\n      *\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function lwRateIt() {\n        \n        return {\n            restrict    : 'A',\n\n            link : function (scope, element, attrs) {\n                var rating = attrs.lwRateIt * 32;\n                $(element).css('width', rating + \"px\", 'height', 32);\n            }\n        };\n    };\n\n    /**\n      * lwExpander Directive.\n      * \n      * For apply jquery expander property on attribute\n      *\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function lwExpander() {\n        \n        return {\n            restrict    : 'A',\n            link : function (scope, element, attrs) {\n\n                _.defer(function(text) {\n                    $(element).expander(\n                        {\n                            slicePoint: attrs.sliceCount\n                        }\n                    );\n                });\n            }\n        };\n    };\n\n    /**\n      * lwPopup Directive.\n      *\n      * For apply jquery expander property on attribute\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function lwPopup() {\n\n        return {\n            restrict    : 'A',\n            link : function (scope, element, attrs) {\n\n                $(element).popover({\n                    html: true, \n                    content: function() {\n                      return attrs.message;\n                    }\n                });\n            }\n        };\n    };\n\n    /**\n      * lwPopup Directive.\n      *\n      * For apply jquery expander property on attribute\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function lwTransliterate(appServices, TransliterateDataServices) {\n\n        return {\n            restrict    : 'A',\n            link : function (scope, element, attrs) {\n                element.click(function() {\n                    appServices.showDialog(\n                    {\n                        entityType: attrs.entityType,\n                        entityId: attrs.entityId,\n                        entityKey: attrs.entityKey,\n                        entityString: attrs.entityString,\n                        inputType: attrs.inputType\n                    }, \n                    {\n                        templateUrl : __globals.getTemplateURL('translate-dialog'),\n                        controller: 'TransliterateDialogController as TransliterateDialogCtrl',\n                        resolve: {\n                            getTransliterateData: ['TransliterateDataServices', function(TransliterateDataServices) {\n                                return TransliterateDataServices\n                                        .getTransliterateSupportData(attrs.entityType, attrs.entityId, attrs.entityKey);\n                            }]\n                        }\n                    }, \n                    function() {\n\n                    });\n                });\n            }\n        };\n    };\n\n    /**\n\t  * lwNgColorbox Directive.\n\t  * \n\t  * For apply jquery color box property on element\n\t  *\n\t  *\n\t  * @return void\n\t  *-------------------------------------------------------- */\n\n\tfunction lwNgColorbox() {\n\n\t\treturn {\n            restrict    : 'A',\n            link        : function(scope, element, attrs) {\n\n                element.click(function( e ) {\n                    e.preventDefault();\n                    $.colorbox({\n                        maxwidth    : \"90%\",\n                        maxHeight   : \"90%\",\n                        href        :this.href\n                    });\n                });\n\n            }\n        };\n\n\t};\n\n\t/**\n\t  * lwColorPicker Directive.\n\t  * \n\t  * For apply jquery color box property on element\n\t  *\n\t  *\n\t  * @return void\n\t  *-------------------------------------------------------- */\n\n\tfunction lwColorPicker() {\n\n\t\treturn {\n            restrict    : 'A',\n            scope: {\n                ngModel : \"=\"\n            },\n            link        : function(scope, element, attrs) {\n\n                element.focus(function( e ) {\n                \t\n                    e.preventDefault();\n                    \n                    $(element).colpick({\n\t\t\t\t\t\tflat:false,\n\t\t\t\t\t\tlayout:'hex',\n\t\t\t\t\t\tsubmit:true,\n                        open :true,\n\t\t\t\t\t\tonChange:function(hsb,hex,rgb,el,bySetColor) {\n\t                        // Fill the text box just if the color was set using the picker, and not the colpickSetColor function.\n\t                       \n\t\t\t\t\t\t\tscope.$evalAsync(function () {\n\t\t\t\t\t\t\t  scope.ngModel = hex;\n                              $('#lwchangeHeaderColor').css('background', \"#\"+hex);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n                        onSubmit:function() {\n\n                            $(element).colpickHide();\n                        }\n\n\t\t\t\t\t});\n                });\n\n            }\n        };\n\n\t};\n\n    /**\n      * lwPiaChart Directive.\n      *\n      * For apply jquery Rate-It property on attribute\n      *\n      *\n      * @return void\n      *-------------------------------------------------------- */\n\n    function lwChart() {\n\n        return {\n            restrict    : 'A',\n            scope : {\n                source  : \"=\",\n                labels  : \"=\",\n                colors  : \"=\",\n                options : \"=\"\n            },\n            link : function (scope, element, attrs) {\n\n            var ctx = element[0].getContext(\"2d\");\n            \n            var options = {\n                    responsive: true,\n                    legend: {\n                        onClick: function (e) {\n                            e.stopPropagation();\n                        }\n                    }\n                };\n                \n                if (_.has(attrs, 'options') && !_.isUndefined(attrs.options) && _.isEmpty(attrs.options)) {\n\n                    options = attrs.options;\n                }\n\n                \n                var myPieChart = new Chart(ctx,{\n                    type: attrs.lwChart,\n                    data: {\n                        datasets: [{\n                            data: __globals.makeToArrayWithEval(attrs.source),\n                            backgroundColor: __globals.makeToArrayWithEval(attrs.colors)\n                        }],\n                        labels: __globals.makeToArrayWithEval(attrs.labels)\n                    },\n                    options: options\n                }); \n            }\n        };\n    };\n\n\n\t/**\n\t  * lwFancytree Directive.\n\t  * \n\t  * For apply jquery fancytree property on element\n\t  *\n\t  *\n\t  * @return void\n\t  *-------------------------------------------------------- */\n\n\tfunction lwFancytree(appFancytree) {\n\n\t\treturn {\n            restrict: 'A',\n            scope: {\n                fieldFor    : '@',\n                ngModel     : '=',\n\t\t\t\tsource      : '='\n            },\n            link: function (scope, element, attrs) {\n\n  \t\t\t\tattrs.$observe('source', function() {\n\n\t            \tvar treeData = appFancytree.getFancytreeTreeFormate(\n\t            \t\t\t\t\t\teval(attrs.source),\n\t\t\t\t            \t\t\tattrs.listingFor, \n\t\t\t\t            \t\t\tattrs.formType, \n\t\t\t\t            \t\t\teval(attrs.formId)\n\t\t\t\t            \t\t);\n\n\t            \tvar tree       = element.fancytree(),\n\t                    formData   = element.parents('form.lw-ng-form')\n\t                                      .data('$formController'),\n\t                    formField  =  formData[scope.fieldFor];\n\n\n\t\t                treeData = appFancytree.getFancytreeTreeFormate(\n\t            \t\t\t\t\t\teval(attrs.source),\n\t\t\t\t            \t\t\tattrs.listingFor, \n\t\t\t\t            \t\t\tattrs.formType, \n\t\t\t\t            \t\t\teval(attrs.formId)\n\t\t\t\t            \t\t);\n\t                \t\t\n\t                if (tree) {\n\t                   tree.fancytree('destroy');\n\t                }\n\n\t            \tif (attrs.listingFor === 'categories' || attrs.listingFor === 'pages') {\n\t            \t\n\t            \t\ttree.fancytree({\n\t\t                \tsource          : treeData,\n\t\t                    extensions      : [\"glyph\", \"dnd\"],\n\t\t\t\t\t        autoActivate    : true, // Automatically activate a node when it is focused (using keys).\n\t\t\t\t\t        autoCollapse    : true, // Automatically collapse all siblings, when a node is expanded.\n\t\t\t\t\t        selectMode      : 1,\n\t\t\t\t\t        activate        : function(event, data) {\n\t\t\t\t\t        \tscope.$apply(function() {\n\t\t\t\t\t\t\t        scope.ngModel = data.node.key;\n\t\t\t\t\t\t\t    });\n\t\t\t\t\t        },\n\t\t\t\t\t        debugLevel      : 1,\n\t\t\t\t\t        autoScroll      : true,\n\t\t\t\t\t        generateIds     : false,\n\t\t\t\t\t        activeVisible   : true,\n\t\t\t\t\t        clickFolderMode : 3,\n\t\t\t\t\t        icon            : true,\n\t\t\t\t\t        idPrefix        : \"cat\",\n\t\t\t\t\t        dataType        : \"json\",\n\t\t\t\t\t        dnd             : {\n\t\t\t\t\t               dragStart: function() {}\n\t\t\t\t\t        },\n\t\t\t\t\t        glyph           : {\n\t\t\t\t\t          map             : {\n\t\t\t\t\t              doc             : \"fa fa-file\",\n\t\t\t\t\t              docOpen         : \"fa fa-file\",\n\t\t\t\t\t              error           : \"fa fa-warning-sign\",\n\t\t\t\t\t              expanderClosed  : \"fa fa-plus-circle\",\n\t\t\t\t\t              expanderOpen    : \"fa fa-minus-circle\",\n\t\t\t\t\t              folder          : \"fa fa-folder\",\n\t\t\t\t\t              folderOpen      : \"fa fa-folder-open\",\n\t\t\t\t\t              loading         : \"fa fa-refresh\",\n\t\t\t\t\t          }\n\t\t\t\t\t        }\n\t\t                    \n\t\t                });\n\t            \t} else {\n\t            \t\t\n\t            \t\ttree.fancytree({\n\t\t                \tsource          : treeData,\n\t\t                    extensions      : [\"glyph\", \"dnd\"],\n\t\t\t\t\t        autoCollapse    : false,\n\t\t\t\t\t        selectMode      : 2,\n\t\t\t\t\t        checkbox        : true,\n\t\t\t\t\t        debugLevel      : 1,\n\t\t\t\t\t        autoScroll      : true,\n\t\t\t\t\t        generateIds     : false,\n\t\t\t\t\t        activeVisible   : true,\n\t\t\t\t\t        clickFolderMode : 3,\n\t\t\t\t\t        cache           : true,\n\t\t\t\t\t        idPrefix        : \"cat\",\n\t\t\t\t\t        dataType        : \"json\",\n\t\t\t\t\t        select: function(event, data) {\n\n\t\t\t\t\t\t\t\t// Display list of selected nodes\n\t\t\t\t\t\t\t\tvar selNodes     = data.tree.getSelectedNodes(),\n\t                                selectedIDs  = [],\n\t                                formField    = formData[scope.fieldFor];\n\n\t\t\t\t\t\t\t\tscope.ngModel = [];\n\n\t\t\t\t\t\t\t\t// convert to title/key array\n\t\t\t\t\t\t\t\t$.map(selNodes, function(node) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t    selectedIDs.push(node.key);\n\n\t\t\t\t\t\t\t\t});\n\n\t                            scope.$apply(function() {\n\n\t                                scope.ngModel = selectedIDs;\n\n\t                            });\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t        dnd             : {\n\t\t\t\t\t                dragStart: function() {}\n\t\t\t\t\t        },\n\t\t\t\t\t        glyph           : {\n\t\t\t\t\t          \tmap             : {\n\t\t\t\t\t\t            doc             : \"fa fa-file\",\n\t\t\t\t\t                docOpen         : \"fa fa-file\",\n\t\t\t\t\t                error           : \"fa fa-warning-sign\",\n\t\t\t\t\t                expanderClosed  : \"fa fa-plus-circle\",\n\t\t\t\t\t                expanderLazy    : \"fa fa-plus-circle\",\n\t\t\t\t\t                expanderOpen    : \"fa fa-minus-circle\",\n\t\t\t\t\t                folder          : \"fa fa-folder\",\n\t\t\t\t\t                folderOpen      : \"fa fa-folder-open\",\n\t\t\t\t\t                loading         : \"fa fa-refresh\",\n\t\t\t\t\t                checkbox        : \"fa fa-square-o\",\n\t\t\t\t\t                checkboxSelected: \"fa fa-check-square\",\n\t\t\t\t\t                checkboxUnknown : \"fa fa-share\",\n\t\t\t\t\t          \t}\n\t\t\t\t\t        },\n\t\t                    \n\t\t                });\n\t            \t}\n\n\t            });\n\t\t\t\t\n\t\t\t}\n        }\n\n\t};\n    \n})(); ","\"use strict\";\n// App Global Resources\n\n// check if browser is ie - http://hsrtech.com/psd-to-html/conditional-comments-ie11/\nvar isInternetExplorer = false;\nvar ua = window.navigator.userAgent;\nvar oldIE = ua.indexOf('MSIE ');\nvar newIE = ua.indexOf('Trident/');\n    \nif ((oldIE > -1) || (newIE > -1)) {\n    isInternetExplorer = true;\n}\n\n// Promise Polyfill for IE - https://github.com/taylorhakes/promise-polyfill\nif(isInternetExplorer) {\n\n\t!function(t){function e(){}function n(t,e){return function(){t.apply(e,arguments)}}function o(t){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof t)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(t,this)}function r(t,e){for(;3===t._state;)t=t._value;return 0===t._state?void t._deferreds.push(e):(t._handled=!0,void a(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?i:f)(e.promise,t._value);var o;try{o=n(t._value)}catch(r){return void f(e.promise,r)}i(e.promise,o)}))}function i(t,e){try{if(e===t)throw new TypeError(\"A promise cannot be resolved with itself.\");if(e&&(\"object\"==typeof e||\"function\"==typeof e)){var r=e.then;if(e instanceof o)return t._state=3,t._value=e,void u(t);if(\"function\"==typeof r)return void s(n(r,e),t)}t._state=1,t._value=e,u(t)}catch(i){f(t,i)}}function f(t,e){t._state=2,t._value=e,u(t)}function u(t){2===t._state&&0===t._deferreds.length&&a(function(){t._handled||d(t._value)});for(var e=0,n=t._deferreds.length;n>e;e++)r(t,t._deferreds[e]);t._deferreds=null}function c(t,e,n){this.onFulfilled=\"function\"==typeof t?t:null,this.onRejected=\"function\"==typeof e?e:null,this.promise=n}function s(t,e){var n=!1;try{t(function(t){n||(n=!0,i(e,t))},function(t){n||(n=!0,f(e,t))})}catch(o){if(n)return;n=!0,f(e,o)}}var l=setTimeout,a=\"function\"==typeof setImmediate&&setImmediate||function(t){l(t,0)},d=function(t){\"undefined\"!=typeof console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",t)};o.prototype[\"catch\"]=function(t){return this.then(null,t)},o.prototype.then=function(t,n){var o=new this.constructor(e);return r(this,new c(t,n,o)),o},o.all=function(t){var e=Array.prototype.slice.call(t);return new o(function(t,n){function o(i,f){try{if(f&&(\"object\"==typeof f||\"function\"==typeof f)){var u=f.then;if(\"function\"==typeof u)return void u.call(f,function(t){o(i,t)},n)}e[i]=f,0===--r&&t(e)}catch(c){n(c)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},o.resolve=function(t){return t&&\"object\"==typeof t&&t.constructor===o?t:new o(function(e){e(t)})},o.reject=function(t){return new o(function(e,n){n(t)})},o.race=function(t){return new o(function(e,n){for(var o=0,r=t.length;r>o;o++)t[o].then(e,n)})},o._setImmediateFn=function(t){a=t},o._setUnhandledRejectionFn=function(t){d=t},\"undefined\"!=typeof module&&module.exports?module.exports=o:t.Promise||(t.Promise=o)}(this);\n\n        // Check if IE then hide slider navigations\n        var $sliderNavigations = document.getElementsByClassName('owl-nav');\n        _.delay(function() {\n            _.forEach($sliderNavigations, function(item) {\n                $(item).hide();\n            });\n        }, 500);\n}\n\n// a container to hold underscore template data\n_.templateSettings.variable = \"__tData\"; \n__globals.baseKCFinderPath = './upload-manager/';\n\n/**\n  * ckEditor link target customization\n  *\n  *-------------------------------------------------------- */\n/* Here we are latching on an event ... in this case, the dialog open event */\nif(window.CKEDITOR) {\n    CKEDITOR.on('dialogDefinition', function(ev) {\n\n    try {\n\n        /* this just gets the name of the dialog */\n\n    var dialogName = ev.data.name;\n\n    /* this just gets the contents of the opened dialog */\n\n    var dialogDefinition = ev.data.definition;   \n\n    /* Make sure that the dialog opened is the link plugin ... otherwise do nothing */\n\n    if(dialogName == 'link') {\n        /* Getting the contents of the Target tab */\n\n        var informationTab = dialogDefinition.getContents('target');\n\n        /* Getting the contents of the dropdown field \"Target\" so we can set it */\n\n        var targetField = informationTab.get('linkTargetType');\n\n        // Set target options removed for forum comment editor\n        if (_.has(CKEDITOR.instances, 'comment')) {\n\n            targetField.items = [];\n            targetField.items.unshift([\"_default\", \"_default\"]);\n\n        } else {\n             // Add new\n            targetField.items.unshift([\"_default\", \"_default\"]);\n        }\n       \n\n        /* Now that we have the field, we just set the default to _blank\n\n        A good modification would be to check the value of the URL field\n\n        and if the field does not start with \"mailto:\" or a relative path,\n\n        then set the value to \"_blank\" */\n\n       // targetField['default'] = '_default';\n\n    }\n        } catch(exception) {\n\n            alert('Error ' + ev.message);\n        }\n});\n}\n\n_.assign(__globals, {\n\n      authConfig  : {\n        redirects   : {\n          guestOnly     : 'user_profile_edit',\n          authorized    : 'user_login',\n          accessDenied  : 'unauthorized'\n        }\n      },\n\n        getAuthorizationToken : function() {\n            return window.__appImmutables.auth_info.authorization_token;\n        },\n\n        getAppImmutables: function(immutableID) {\n\n            if (immutableID) {\n                return window.__appImmutables[immutableID];\n            } else {\n                return window.__appImmutables;\n            }            \n        },\n\n        getAppJSItem: function(key) {\n\n            return window[key];          \n        },\n\n        getJSString : function(stringID) {\n\n            var messages = this.getAppImmutables('messages');\n            return messages.js_string[stringID];\n\n        },\n\n        getReplacedString : function(element, replaceKey, replaceValue) {\n\n            return element.attr('data-message')\n                    .replace(replaceKey , '<strong>'+unescape(replaceValue)+'</strong>');\n\n        },\n\n        /**\n          * Show action confirmation\n          *\n          * @param object options\n          * @param function callback\n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        showConfirmation : function(options, callback) {\n\n            var defaultOptions       = {\n                title              : this.getJSString('confirm_title'),\n                showCancelButton   : true,\n                cancelButtonText   : this.getJSString('confirm_cancel_button_text'),\n                closeOnConfirm     : false,\n                allowEscapeKey     : false,\n  \t\t\t\tallowOutsideClick  : false,\n                confirmButtonColor :  \"#c9302c\",\n                confirmButtonClass : 'btn-success',\n                onOpen: function() {\n                    $('html').addClass('lw-disable-scroll');\n                },\n                onClose: function() {\n                    $('html').removeClass('lw-disable-scroll');\n                }\n            };\n\n            // Check if callback exist \n            if (callback && _.isFunction(callback)) {\n\n                _.assign(defaultOptions, options);\n                \n                swal(defaultOptions).then(function(result) {\n                    // handle Confirm button click\n                    // result is an optional parameter, needed for modals with input\n                    if (result.value) {\n                        return callback.call(this);\n                    }\n\n                  }, function(dismiss) {\n\n                        // dismiss can be 'cancel', 'overlay', 'close', 'timer'\n                        if (closeCallback && _.isFunction(closeCallback)) {\n                            return closeCallback.call( this, dismiss );\n                        }\n                        \n                  });\n\n            } else {\n            \n                // show only simple confirmation\n                swal(options.title, options.text, options.type);\n            }\n\n        },\n        \n        buildTree: function (arry, labels) {\n\n        \tvar childrenLabel = 'children';\n\n        \tif (labels && _.isString(labels)) {\n        \t\tchildrenLabel = labels;\n        \t}\n\n\t\t    var roots = [], children = {}, parentID = null;\n\n\t\t    // find the top level nodes and hash the children based on parent\n\t\t    for (var i = 0, len = arry.length; i < len; ++i) {\n\t\t        var item = arry[i],\n\t\t            p = item.parent_id;\n\t\t            var target = !p ? roots : (children[p] || (children[p] = []));\n\t\t        \ttarget.push(item);\n\t\t    }\n\n\t\t    // function to recursively build the tree\n\t\t    var findChildren = function(parent) {\n\t\t    \t\n\t\t        if (children[parent.key]) {\n\t\t            parent[childrenLabel] = children[parent.key];\n\t\t            parent['folder']      = true;\n\t\t            for (var i = 0, len   = parent[childrenLabel].length; i < len; ++i) {\n\t\t                findChildren(parent[childrenLabel][i]);\n\t\t            }\n\t\t        }\n\t\t    };\n\n\t\t    // enumerate through to handle the case where there are multiple roots\n\t\t    for (var i = 0, len = roots.length; i < len; ++i) {\n\t\t        findChildren(roots[i]);\n\t\t    }\n\n\t\t       \n\t\t    return roots;\n\t\t},\n\n        /**\n          * Get selectize configration options\n          *\n          * @inject object options\n          *\n          * @return object\n          *---------------------------------------------------------------- */\n  \n        /*getSelectizeOptions : function (options) {\n\n            this.defaultOptions = {   \n                maxItems    : 1,\n                valueField  : 'id',\n                labelField  : 'name',\n                searchField : [ 'name' ]  \n            };\n\n            return _.assign(this.defaultOptions, options);\n\n        },*/\n        \n        // Check is Numeric vlaue or pure number\n        isNumeric: function(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        },\n\n        getSelectizeOptions : function (options) {\n\n            this.defaultOptions = {\n                maxItems        : 1,\n                valueField      : 'id',\n                labelField      : 'name',\n                searchField     : ['name'],\n                onInitialize    : function(selectize) {\n\n                var currentValue = selectize.getValue();\n                \n                if (_.isEmpty(currentValue) === false &&\n                    (_.isArray(currentValue) === false &&\n                        _.isObject(currentValue) === false &&\n                        _.isString(currentValue) === true)) {\n                   \n                        if (_.includes(currentValue, ',')) {\n\n                            var currentValues = currentValue.split(\",\");\n                           \n                            for(var a in currentValues) {\n                               \n                                currentValues[a] = (__globals.isNumeric(currentValues[a])) ? Number(currentValues[a]) : currentValues[a];\n                            }\n\n                            selectize.setValue(currentValues);\n\n                        } else {\n\n                            if (__globals.isNumeric(currentValue)) {\n\n                                selectize.setValue(Number(currentValue));\n\n                            } else {\n\n                                selectize.setValue(currentValue);\n                            }\n                        }\n                    }\n                }\n            };\n            \n            return _.assign(this.defaultOptions, options);\n        },\n\n        /**\n         * Parse amount to required\n         * \n         * @param array $items\n         *-------------------------------------------------------- */\n\n         parseAmount : function(amount) {\n            \n            return parseFloat(amount)\n         },\n\n        /**\n         * Make a price format\n         * \n         * @param array $items\n         *-------------------------------------------------------- */\n\n        priceFormat : function(amount, currencySymbol, currency) {\n            var currencyFormat =  __globals.getAppImmutables('config')['currency_format'];\n\n            if(! _.isUndefined(currencySymbol) || ! _.isUndefined(currency)) {\n\n                var rawFormat = currencyFormat['raw'];\n                    \n                    return rawFormat.replace(\"{__amount__}\", amount)\n                                    .replace(\"{__currencySymbol__}\", currencySymbol)\n                                    .replace(\"{__currencyCode__}\", currency);\n\n            } else if(_.isUndefined(currency)) {\n\n                var fullFormat = currencyFormat['full'];\n\n                return fullFormat.replace(\"{__amount__}\", amount);\n\n            } else if(currency == false) {\n\n                var shortFormat = currencyFormat['short'];\n\n                return shortFormat.replace(\"{__amount__}\", amount);\n\n            } else {\n\n                return currency;\n            }\n        },\n\n        /**\n         * Redirect browser\n         * \n         * @param array $url\n         *-------------------------------------------------------- */\n\n         showProcessingDialog : function(url) {\n\n            $('html').addClass('lw-has-disabled-block');\n            $('.lw-disabling-block').addClass('lw-disabled-block lw-has-processing-window');\n         },\n\n        /**\n         * Redirect browser\n         * \n         * @param array $url\n         *-------------------------------------------------------- */\n\n         hideProcessingDialog : function(url) {\n\n            $('html').removeClass('lw-has-disabled-block');\n            $('.lw-disabling-block').removeClass('lw-disabled-block lw-has-processing-window');\n         },\n\n\t    /**\n\t     * get categories data\n\t     *\n\t     *-------------------------------------------------------- */\n\t    getCategoriesData : function() {\n\n\t        return _.cloneDeep(window.__appImmutables['categories']);\n\t    },\n\n\t    /**\n\t     * get active categories data\n\t     *\n\t     *-------------------------------------------------------- */\n\t    getActiveCategoriesData : function() {\n\t        return _.cloneDeep(window.__appImmutables['active_categories']);\n\t    },\n\n\t    /**\n\t     * get pages data\n\t     *\n\t     *-------------------------------------------------------- */\n\t    getPagesData : function() {\n\n\t        return _.cloneDeep(window.__appImmutables['pages']);\n\t    },\n\n        /**\n         * get pages data\n         *\n         *-------------------------------------------------------- */\n        makeToArrayWithEval : function(object) {\n\n            return _.toArray(eval(object));\n        },\n\n\t    /**\n\t     * get active pages data\n\t     *\n\t     *-------------------------------------------------------- */\n\t    getActivePagesData : function() {\n\n\t        return _.cloneDeep(window.__appImmutables['active_pages']);\n\t    },\n\n\t    /**\n\t     * get pages type\n\t     *\n\t     *-------------------------------------------------------- */\n\t    getPagesTypes : function() {\n\n\t        return window.__appImmutables['pageType'];\n\t    },\n\n        /**\n         * Check if current app is Public or manage app\n         *\n         *-------------------------------------------------------- */\n        isPublicApp : function() {\n\n            return window.__appImmutables['publicApp'];\n        },\n\n\t    /**\n\t     * get pages type\n\t     *\n\t     *-------------------------------------------------------- */\n\t    getPagesLinks : function() {\n\n\t        return window.__appImmutables['pageLink'];\n\t    },\n\n\t    /**\n\t     * get pages type\n\t     *\n\t     *-------------------------------------------------------- */\n\t    findParents : function(itemCollection, findItem, existingCollection) {\n\n\t\t\tif(!existingCollection) {\n\t\t\t\tvar existingCollection = new Array();\n\t\t\t}\n\n\t\t\tfor(var item in itemCollection) {\n\t\t\t\tvar thisItem = itemCollection[item];\n\n\t\t\t\tif(thisItem.key === parseInt(findItem)) {\n\t\t\t\t\texistingCollection.push(thisItem);\n\n\t\t\t\t\tif(thisItem.parent_id) {\n\t\t\t\t\t\tthis.findParents(itemCollection, thisItem.parent_id, existingCollection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn existingCollection;\n\t\t},\n\n\t\t/**\n\t     * slug text\n\t     *\n\t     *-------------------------------------------------------- */\n\t    slug : function(str) {\n\n\t\t\tvar $slug   = '';\n\t\t    var trimmed = $.trim(str);\n\t\t    \t$slug = trimmed.replace(/[^a-z0-9-]/gi, '-').\n\t\t    \treplace(/-+/g, '-').\n\t\t    \treplace(/^-|-$/g, '');\n\t\t    return $slug.toLowerCase();\n\t\t},\n\n\t\t/**\n\t      * get config items\n\t      *\n\t      * @return bool\n\t      *---------------------------------------------------------------- */\n\n\t    configItem : function(key) {\n\t        return window.__appImmutables.config[key];\n\t    },\n\n        /**\n          * Get Scroll Offset\n          *\n          * @return bool\n          *---------------------------------------------------------------- */\n        getScrollOffsets : function() {\n            var doc = document, w = window;\n            var x, y, docEl;\n            \n            if ( typeof w.pageYOffset === 'number' ) {\n                x = w.pageXOffset;\n                y = w.pageYOffset;\n            } else {\n                docEl = (doc.compatMode && doc.compatMode === 'CSS1Compat')?\n                        doc.documentElement: doc.body;\n                x = docEl.scrollLeft;\n                y = docEl.scrollTop;\n            }\n            return {x:x, y:y};\n        },\n\n\t    /**\n\t     * Generate key vlaue page formate for\n\t     * \n\t     * @param array $data\n\t     *-------------------------------------------------------- */\n\n\t     generateKeyValueOption : function(configKey) {\n\t\t\n\t\t\tvar items = window.__appImmutables.config[configKey];\n\t        var option   = [];\n\n\t      _.forEach(items, function(value, key) {\n\n            option.push({\n                id : parseInt(key),\n                name : value\n\t        });\n\n\t      });\n\n\t      return option;\n         },\n    \n    \n        filterArrayValue : function(items) {\n\n            var option = [];\n            \n            _.each(items, function(value, key) {\n                \n                option.push(parseInt(value));\n\n            });\n\n            return option;\n        },\n\n\t   /**\n\t     * Generate key value option for items\n\t     * \n\t     * @param array $items\n\t     *-------------------------------------------------------- */\n\n\t     generateKeyValueItems : function(items) {\n\t\t\t\n\t\t\tvar option   = [];\n\n\t\t\t_.forEach(items, function(value, key) {\n\n            option.push({\n                id : parseInt(key),\n                name : value\n\t        });\n\n\t      });\n\n\t      return option;\n\t     },\n\n    /**\n         * Redirect browser\n         * \n         * @param array $url\n         *-------------------------------------------------------- */\n\n         redirectBrowser : function(url) {\n\n            $('html').addClass('lw-has-disabled-block');\n            $('.lw-disabling-block').addClass('lw-disabled-block lw-has-processing-window');\n            \n            window.location = url;\n         },\n\n\t    \n\n        /**\n          * Set ckEditor options\n          *\n          *-------------------------------------------------------- */\n        \n        ckEditorConfig: function() {\n\n            return {\n                contentsCss :[\n                    window.__appImmutables.static_assets.vendor_css,\n                    window.__appImmutables.static_assets.application_css,\n                    window.__appImmutables.static_assets.public_css,\n                    window.__appImmutables.static_assets.css_style\n                ],\n                //filebrowserImageBrowseUrl : __globals.baseKCFinderPath+'browse.php?type=images&authorize_token='+__globals.getAuthorizationToken(),\n                //filebrowserImageUploadUrl : __globals.baseKCFinderPath+'upload.php?type=images&authorize_token='+__globals.getAuthorizationToken(),\n                filebrowserImageBrowseUrl: window.__appImmutables.ckeditor.filebrowserImageBrowseUrl,\n                filebrowserImageUploadUrl: window.__appImmutables.ckeditor.filebrowserImageUploadUrl,\n                filebrowserBrowseUrl: window.__appImmutables.ckeditor.filebrowserBrowseUrl,\n                filebrowserUploadUrl: window.__appImmutables.ckeditor.filebrowserUploadUrl,\n                allowedContent : true,\n                toolbar : [\n                    { \n                        name    : 'basicstyles',\n                        items   : [\n                            'Bold',\n                            'Italic',\n                            'Underline'\n                        ] \n                    },\n                    { \n                        name    : 'ClipboardJS',\n                        items   : [ \n                            'Cut',\n                            'Copy',\n                            'Paste', \n                            '-',\n                            'Undo',\n                            'Redo'\n                        ]\n                    },   // '/',\n                    { \n                        name    : 'links',\n                        items   : [ \n                            'Link',\n                            'Unlink',\n                            'Anchor'\n                        ]\n                    },\n                    { \n                        name    : 'insert',\n                        items   : [ 'Image'/*, 'UploadManager'*/]\n                    },\n                    { \n                        name    : 'tools',\n                        items   : [ 'Maximize']\n                    },\n                    {   name: 'paragraph',\n                     \titems : [ \n\t                     \t'NumberedList',\n\t                     \t'BulletedList',\n\t                     \t'-','Outdent',\n\t                     \t'Indent',\n\t                     \t'-',\n\t                     \t'Blockquote',\n\t                     \t'CreateDiv',\n\t\t\t\t\t\t\t'-','JustifyLeft',\n\t\t\t\t\t\t\t'JustifyCenter','JustifyRight',\n\t\t\t\t\t\t\t'JustifyBlock','-',\n\t\t\t\t\t\t\t'BidiLtr',\n\t\t\t\t\t\t\t'BidiRtl' \n\t\t\t\t\t\t] \n\t\t\t\t\t},\n                    { \n                        name    : 'styles',\n                        items   : [ \n                        ]\n                    },\n                    { \n                        name    : 'colors',\n                        items   : [ \n                            'TextColor',\n                            'BGColor' \n                        ] \n                    },\n                    { \n                        name    : 'document',\n                        items   : [ \n                        ]\n                    },\n                    { \n                    name    : 'source',\n                    items   : [\n                        'Source'\n                    ]\n                }\n                ],\n                //removeButtons     : 'Underline, Subscript, Superscript', // remove buttons\n                format_tags         : 'p;h1;h2;h3;pre', // required formatting tags\n                removeDialogTabs    : 'editing;link:upload;image:Upload',     // required remove dialog tabs,\n                extraPlugins        : 'UploadManager,justify'\n            };\n\n        },\n        \n        /**\n          * Set ckEditor options for limited options\n          *\n          *-------------------------------------------------------- */\n        \n        ckEditorLimitedOptionsConfig: function() {\n\n            return {\n            \n                toolbar : [\n                    { \n                        name    : 'basicstyles',\n                        items   : [\n                            'Bold',\n                            'Italic',\n                            'Underline'\n                        ] \n                    },\n                    { \n                        name    : 'ClipboardJS',\n                        items   : [ \n                            'Cut',\n                            'Copy',\n                            'Paste', \n                            '-',\n                            'Undo',\n                            'Redo'\n                        ]\n                    },\n                    { \n                        name    : 'tools',\n                        items   : [ 'Maximize']\n                    },\n                    { \n                        name: 'paragraph',\n                        items : [ \n                            'NumberedList',\n                            'BulletedList',\n                            'Blockquote'\n                        ]\n                    }\n                ],\n                //removeButtons     : 'Underline, Subscript, Superscript', // remove buttons\n                format_tags         : 'p;h1;h2;h3;pre' // required formatting tags\n            };\n\n        }\n\n});    \n\n\nvar __ngSupport = {\n        getText:function(string, replaceObj) {\n\n            if (replaceObj && _.isObject(replaceObj)) {\n\n                _.forIn(replaceObj, function(value, key) {\n                    string = string.replace(key, value);\n                });\n            }\n\n             return string;\n        }\n};\n\n//Datatables Defaults\n $.extend( $.fn.dataTable.defaults, {\n    \"serverSide\"      : true,\n    \"searchDelay\"     : 1800,\n    \"iCookieDuration\" : 60,\n    \"paging\"          : true,\n    \"processing\"      : true,\n    \"responsive\"      : true,\n   \"pageLength\"      : 25,\n    \"destroy\"         : true,\n    \"retrieve\"        : true,\n    \"lengthChange\"    : true,\n    \"language\"        : {\n                          \"emptyTable\": \"There are no records to display.\"\n                        },\n    \"searching\"       : false,\n    \"ajax\"            : {\n      // any additional data to send\n      \"data\"          : function ( additionalData ) {\n        additionalData.page = (additionalData.start / additionalData.length) + 1;\n      }\n    }\n  });","(function() {\n'use strict';\n\n\tangular.module('app.form', [])\n\t  \t.directive(\"lwFormSelectizeField\", [ \n            '__Form', lwFormSelectizeField\n        ])\n        .directive(\"lwFormCheckboxField\", [ \n            '__Form', lwFormCheckboxField\n        ])\n        .directive(\"lwRecaptcha\", lwRecaptcha)\n        .directive('lwBootstrapMdDatetimepicker', lwBootstrapMdDatetimepicker)\n        .directive('lwSelectAllCheckbox', function () {\n            return {\n                replace: true,\n                restrict: 'E',\n                scope: {\n                    checkboxes: '=',\n                    allselected: '=allSelected',\n                    allclear: '=allClear',\n                    selectedrows: '='\n                },\n                templateUrl:'lw-select-all-checkbox-field.ngtemplate',\n                link: function ($scope, $element) {\n             \n                    $scope.masterChange = function () {\n                        if ($scope.master) {\n                            angular.forEach($scope.checkboxes, function (cb, index) {\n                                cb.isSelected = true;\n                            });\n                        } else {\n                            angular.forEach($scope.checkboxes, function (cb, index) {\n                                cb.isSelected = false;\n                            });\n                        }\n                    };\n         \n                    $scope.$watch('checkboxes', function () {\n                        var allSet = true,\n                            allClear = true,\n                            collectSelectedRows = [];\n\n                        angular.forEach($scope.checkboxes, function (cb, index) {\n\n                            if (cb.isSelected) {\n                                allClear = false;\n                            } else {\n                                allSet = false;\n                            }\n\n                            // collect here selected rows\n                            if (cb.isSelected)  {\n                                collectSelectedRows.push(cb); \n                            }\n                        });\n\n                        $scope.selectedrows = collectSelectedRows;\n\n                        if ($scope.allselected !== undefined) {\n                            $scope.allselected = allSet;\n                        }\n                        if ($scope.allclear !== undefined) {\n                            $scope.allclear = allClear;\n                        }\n                    \n                        $element.prop('indeterminate', false);\n                        if (allSet) {\n                            $scope.master = true;\n                        } else if (allClear) {\n                            $scope.master = false;\n                        } else {\n                            $scope.master = false;\n                            $element.prop('indeterminate', true);\n                        }\n                        \n                    }, true);\n                }\n            };\n        })\n\n        /**\n          * lwFormRadioField Directive.\n          * \n          * Form Field Radio Directive -\n          * App Level Customise Directive\n          *\n          * @inject __Form\n          *\n          * @return void\n          *-------------------------------------------------------- */\n\n        .directive(\"lwFormRadioField\", [\n            '__Form',\n            function ( __Form ) {\n\n              return {\n\n                restrict    : 'E',\n                replace     : true,\n                transclude  : true,\n                scope       : {\n                    fieldFor : '@'\n                },\n                templateUrl     : 'lw-form-radio-field.ngtemplate',\n                link            : function(scope, elem, attrs, transclude) {\n\n                    if(elem.hasClass('lw-remove-transclude-tag')) {\n                        elem.find('ng-transclude').children().unwrap();\n                    }\n\n                    var formData    = elem.parents('form.lw-ng-form')\n                                        .data('$formController'),\n                    inputElement    = elem.find('.lw-form-field ');\n\n                    //inputElement.prop('id', scope.fieldFor);\n\n                    scope.formField                 = {};\n                    scope.formField[scope.fieldFor] = attrs;\n\n                    scope.lwFormData = { formCtrl:formData };\n\n                    // get validation message\n                    scope.getValidationMsg = function( key, labelName ) {\n\n                        return __Form.getMsg(key, labelName);\n\n                    };\n\n                }\n\n                }\n\n            }\n        ])\n\n        /**\n          * lwCkEditor Directive\n          * App level ck editor directice for show ck editor \n          *\n          * @return void\n          *---------------------------------------------------------------- */\n\n        .directive('lwCkEditor', ['__Utils', function(__Utils) {\n\n            return {\n                transclude: true,\n                restrict: 'EA',\n                require: '?ngModel',\n                link: function (scope, element, attrs, ngModelCtrl) {\n\n                    var options = angular.extend({\n                        fullscreenable: true,\n                        imageWidthModalEdit: true,\n                        semantic: false,\n                        closable: false,autogrow: true,\n                        btnsDef: {\n                            // Create a new dropdown\n                            image: {\n                                dropdown: ['insertImage', 'upload', 'noembed'],\n                                ico: 'insertImage'\n                            }\n                        },\n                        plugins: {\n                            table: {\n                                rows : 8,\n                                columns : 8,\n                                styler : 'table'\n                            },\n                            // Add imagur parameters to upload plugin for demo purposes\n                            upload: {\n                                serverPath:  __Utils.apiURL('file_manager.upload')+'?currentDir=',\n                                fileFieldName: 'file',\n                                headers     : {\n                                    'X-XSRF-TOKEN': __Utils.getXSRFToken()\n                                },\n                                urlPropertyName: 'url'\n                            }\n                        },\n                        btns: [\n                            ['formatting', 'table'],\n                            ['foreColor', 'backColor', 'underline','strikethrough','|','removeformat','viewHTML'],\n                            ['strong', 'em', 'del'],\n                            ['superscript', 'subscript'],\n                            ['link'],\n                            ['image'], // Our fresh created dropdown\n                            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],\n                            ['unorderedList', 'orderedList'],\n                            ['horizontalRule'],\n                            ['fullscreen']\n                        ]\n                    }, scope.$eval(attrs.editorConfig));\n\n                    ngModelCtrl.$render = function() {\n                        angular.element(element).trumbowyg('html', ngModelCtrl.$viewValue);\n                    };\n\n                    angular.element(element).trumbowyg(options).on('tbwchange', function () {\n                        ngModelCtrl.$setViewValue(angular.element(element).trumbowyg('html'));\n                    }).on('tbwpaste', function () {\n                        ngModelCtrl.$setViewValue(angular.element(element).trumbowyg('html'));\n                    });\n\n                    scope.$parent.$watch(attrs.ngDisabled, function(newVal){\n                        angular.element(element).trumbowyg(newVal ? 'disable' : 'enable');\n                    });\n                }\n            };\n\n        }]);\n    \n    /**\n     * lwFormSelectizeField Directive.\n     * \n     * App level customise directive for angular selectize as form field\n     *\n     * @inject __Form\n     *\n     * @return void\n     *-------------------------------------------------------- */\n\n    function lwFormSelectizeField(__Form) {\n\n        return {\n\n            restrict    : 'E',\n            replace     : true,\n            transclude  : true,\n            scope       : {\n                fieldFor : '@'\n            },\n            templateUrl : 'lw-form-selectize.ngtemplate',\n            link        : function(scope, elem, attrs, transclude) {\n\n                var formData        = elem.parents('form.lw-ng-form')\n                                      .data('$formController'),\n                    selectElement   = elem.find('.lw-form-field');\n\n                selectElement.prop('id', scope.fieldFor);\n              \n                scope.formField                 = {};\n                scope.formField[scope.fieldFor] = attrs;\n\n                scope.lwFormData = { formCtrl : formData };\n\n                // get validation message\n                scope.getValidationMsg = function(key, labelName) {\n\n                    return __Form.getMsg(key, labelName);\n\n                };\n\n            }\n\n        };\n\n    };\n\n    /**\n      * Custom directive for bootstrap-material-datetimepicker\n      *\n      * @return void\n      *---------------------------------------------------------------- */\n    \n    function lwRecaptcha() {\n        \n         return {\n                restrict: 'AE',\n                scope   : {\n                    sitekey : '='\n                },\n                require : 'ngModel',\n                link : function(scope, elm, attrs, ngModel) {\n                    var id;\n                    ngModel.$validators.captcha = function(modelValue, ViewValue) {\n                        // if the viewvalue is empty, there is no response yet,\n                        // so we need to raise an error.\n                        return !!ViewValue;\n                    };\n\n                    function update(response) {\n                        ngModel.$setViewValue(response);\n                        ngModel.$render();\n                    }\n                    \n                    function expired() {\n                        grecaptcha.reset(id);\n                        ngModel.$setViewValue('');\n                        ngModel.$render();\n                        // do an apply to make sure the  empty response is \n                        // proaganded into your models/view.\n                        // not really needed in most cases tough! so commented by default\n                        // scope.$apply();\n                    }\n\n                    function iscaptchaReady() {\n                        if (typeof grecaptcha !== \"object\") {\n                            // api not yet ready, retry in a while\n                            return setTimeout(iscaptchaReady, 0);\n                        }\n                        id = grecaptcha.render(\n                            elm[0], {\n                                // put your own sitekey in here, otherwise it will not\n                                // function.\n                                \"sitekey\": attrs.sitekey,\n                                callback: update,\n                                \"expired-callback\": expired\n                            }\n                        );\n                    }\n                    iscaptchaReady();\n                }\n            };\n\n    };\n\n    /**\n     * lwFormCheckboxField Directive.\n     * \n     * App level customise directive for checkbox form field\n     *\n     * @inject __Form\n     *\n     * @return void\n     *-------------------------------------------------------- */\n\n    function lwFormCheckboxField(__Form) {\n\n        return {\n\n            restrict    : 'E',\n            replace     : true,\n            transclude  : true,\n            scope       : {\n                fieldFor : '@'\n            },\n            templateUrl : 'lw-form-checkbox-field.ngtemplate',\n            link        : function(scope, elem, attrs, transclude) {\n\n                var formData        = elem.parents('form.lw-ng-form')\n                                      .data('$formController'),\n                    selectElement   = elem.find('.lw-form-field');\n\n                selectElement.prop('id', scope.fieldFor);\n              \n                scope.formField                 = {};\n                scope.formField[scope.fieldFor] = attrs;\n\n                scope.lwFormData = { formCtrl : formData };\n\n                // get validation message\n                scope.getValidationMsg = function(key, labelName) {\n                    \n                    return __Form.getMsg(key, labelName);\n\n                };\n\n            }\n\n        };\n\n    };\n\n    /**\n      * Custom directive for bootstrap-material-datetimepicker\n      *\n      * @return void\n      *---------------------------------------------------------------- */\n    \n    function lwBootstrapMdDatetimepicker() {\n\n        return {\n            restrict    : 'A',\n            replace     : false,\n            link        : function(scope, elem, attrs) {\n                \n                var dateTimePickerOptions       = {\n                        time    : true,\n                        okText  : 'Select'\n                    };\n                \n                if( dateTimePickerOptions.time === true ) {\n                    dateTimePickerOptions.format = 'YYYY-MM-DD HH:mm:ss';\n                }\n                    \n                if (attrs.options) {                \n                    _.assign(dateTimePickerOptions, \n                            eval('('+attrs.options+')')\n                        );\n                    \n                }\n\n                $(elem).bootstrapMaterialDatePicker(dateTimePickerOptions);\n\n                angular.element('.dtp-btn-ok')\n                    .addClass('btn btn-primary btn-sm lw-btn');\n                angular.element('.dtp-btn-cancel')\n                    .addClass('btn btn-sm lw-btn');\n\n                angular.element(\".dtp a:contains('clear')\")\n                    .addClass('lw-btn-icon')\n                    .html('<i class=\"fa fa-times\"></i>');\n\n                angular.element(\".dtp a:contains('chevron_left')\")\n                    .addClass('lw-btn-icon')\n                    .html('<i class=\"fa fa-chevron-left\"></i>');\n                \n                angular.element(\".dtp a:contains('chevron_right')\")\n                    .addClass('lw-btn-icon')\n                    .html('<i class=\"fa fa-chevron-right\"></i>');\n\n            }\n\n        };\n\n    };\n\n    \n})(); "]}